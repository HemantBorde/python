
3.8.3 Common Permutation

PC/UVa IDs: 110303/10252, Popularity: A, Success rate: average Level: 1

Given two strings a and b, print the longest string x of letters such that there is a
permutation of x that is a subsequence of a and there is a permutation of x that is a
subsequence of b.

Input

The input file contains several cases, each case consisting of two consecutive lines. This
means that lines 1 and 2 are a test case, lines 3 and 4 are another test case, and so on.
Each line contains one string of lowercase characters, with first line of a pair denoting
a and the second denoting b. Each string consists of at most 1,000 characters.

Output

For each set of input, output a line containing x. If several x satisfy the criteria above,
choose the first one in alphabetical order.

Sample Input

pretty
women
walking
down
the
street

Sample Output
e
nw
et


Program : 

for i in range(0,3):
	str1=input()
	str2=input()

	s1=[]
	s2=[]

	s1[:]=str1
	s2[:]=str2



	lst=[]

	for st1 in s1:
		for st2 in s2:
			if st1==st2:
				lst.append(st1)

	lst = list(dict.fromkeys(lst))
	x="".join(sorted(lst))

	print(x)

